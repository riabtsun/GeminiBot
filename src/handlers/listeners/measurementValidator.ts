import User from "../../models/User";
import Measurement from "../../models/Measurement";
import { NextFunction } from "grammy";
import { measurementRegex, MyContext } from "../../bot";

export const measurementValidator = async (
  ctx: MyContext,
  next: NextFunction
) => {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π
  if (ctx?.message?.text?.startsWith("/")) {
    console.log(
      `[Text Handler] –°–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π "${ctx.message.text}", —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è (–µ—Å–ª–∏ –±—ã–ª) –∏ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ.`
    );
    ctx.session.expectingMeasurement = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    return await next(); // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∫–æ–º–∞–Ω–¥
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –≤–≤–æ–¥–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (!ctx.session.expectingMeasurement) {
    console.log(
      `[Text Handler] –§–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è ${ctx.from?.id}, –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ.`
    );
    return await next(); // –ï—Å–ª–∏ –Ω–µ –æ–∂–∏–¥–∞–µ–º, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
  }

  // --- –ï—Å–ª–∏ –º—ã –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ ---
  console.log(
    `[Text Handler] –û–∂–∏–¥–∞–µ—Ç—Å—è –≤–≤–æ–¥ –æ—Ç ${ctx.from?.id}. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: "${ctx?.message?.text}"`
  );

  const match = ctx?.message?.text?.match(measurementRegex);

  if (match) {
    // --- –§–æ—Ä–º–∞—Ç —Å–æ–≤–ø–∞–ª ---
    console.log(`[Text Handler] –§–æ—Ä–º–∞—Ç —Å–æ–≤–ø–∞–ª –¥–ª—è ${ctx.from?.id}.`);
    try {
      const systolic = parseInt(match[1], 10);
      const diastolic = parseInt(match[2], 10);
      const pulse = parseInt(match[3], 10);

      // –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
      if (
        systolic < 50 ||
        systolic > 300 ||
        diastolic < 30 ||
        diastolic > 200 ||
        pulse < 30 ||
        pulse > 250
      ) {
        await ctx.reply(
          "üò¨ –ö–∞–∂–µ—Ç—Å—è, –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—Ö–æ–¥—è—Ç –∑–∞ —Ä–∞–∑—É–º–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 120/80 75)."
        );
        console.warn(
          `[Text Handler] –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç ${ctx.from?.id}: ${systolic}/${diastolic} ${pulse}`
        );
        // –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, –∂–¥–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
        return;
      }

      // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω—É–∂–µ–Ω _id –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è)
      const user = await User.findOne({ telegramId: ctx.from?.id });
      if (!user) {
        // –≠—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –µ—Å–ª–∏ —Ñ–ª–∞–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º
        await ctx.reply(
          "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ /start."
        );
        ctx.session.expectingMeasurement = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
        return;
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ—Ä–µ–Ω–∏–µ
      const newMeasurement = await Measurement.create({
        userId: user._id,
        timestamp: new Date(),
        systolic,
        diastolic,
        pulse,
      });

      console.log(
        `[Text Handler] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏–∑–º–µ—Ä–µ–Ω–∏–µ ${newMeasurement._id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`
      );
      await ctx.reply(
        `‚úÖ –î–∞–≤–ª–µ–Ω–∏–µ ${systolic}/${diastolic} –∏ –ø—É–ª—å—Å ${pulse} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –°–ø–∞—Å–∏–±–æ!`
      );
      ctx.session.expectingMeasurement = false; // <<<--- –°–ë–†–ê–°–´–í–ê–ï–ú –§–õ–ê–ì –æ–∂–∏–¥–∞–Ω–∏—è
    } catch (error) {
      console.error(
        `[Text Handler] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è –æ—Ç ${ctx.from?.id}:`,
        error
      );
      await ctx.reply(
        "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
      );
      // –°–±—Ä–∞—Å—ã–≤–∞—Ç—å –ª–∏ —Ñ–ª–∞–≥ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è - —Å–ø–æ—Ä–Ω–æ. –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞—Ç—å—Å—è.
      ctx.session.expectingMeasurement = false;
    }
  } else {
    // --- –§–æ—Ä–º–∞—Ç –ù–ï —Å–æ–≤–ø–∞–ª ---
    console.log(
      `[Text Handler] –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç ${ctx.from?.id}: "${ctx?.message?.text}"`
    );
    await ctx.reply(
      "‚ùóÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n" +
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ **–î–∞–≤–ª–µ–Ω–∏–µ/–î–∞–≤–ª–µ–Ω–∏–µ –ü—É–ª—å—Å** (—á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ `/` –∏–ª–∏ –ø—Ä–æ–±–µ–ª, –∑–∞—Ç–µ–º –ø—Ä–æ–±–µ–ª –∏ –ø—É–ª—å—Å).\n" +
        "–ù–∞–ø—Ä–∏–º–µ—Ä: `120/80 75`",
      { parse_mode: "Markdown" } // –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
    );
    // –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
  }
};
