import { startOfMonth, endOfMonth, format } from "date-fns";
import { uk } from "date-fns/locale/uk";
import { InputFile } from "grammy";
import Measurement from "../../models/Measurement";
import User from "../../models/User";
import { pdfService } from "../../services/pdfService";
import { MyContext } from "../../bot";

export const generateReport = async (ctx: MyContext) => {
  const userId = ctx.from?.id;
  if (!userId) return;

  console.log(`[Command /report] –ó–∞–ø—Ä–æ—Å –æ—Ç—á–µ—Ç–∞ –æ—Ç ${userId}`);
  await ctx.replyWithChatAction("upload_document"); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç"

  try {
    // 1. –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await User.findOne({ telegramId: userId });
    if (!user) {
      await ctx.reply("–í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /register.");
      return;
    }

    // 2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞ (–≤ UTC)
    const now = new Date();
    const startCurrentMonthUTC = startOfMonth(now); // –ù–∞—á–∞–ª–æ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –≤ UTC
    const endCurrentMonthUTC = endOfMonth(now); // –ö–æ–Ω–µ—Ü —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –≤ UTC

    // 3. –ù–∞–π—Ç–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    const measurements = await Measurement.find({
      userId: user._id,
      timestamp: {
        $gte: startCurrentMonthUTC,
        $lte: endCurrentMonthUTC,
      },
    }).sort({ timestamp: "asc" }); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏

    if (!measurements || measurements.length === 0) {
      await ctx.reply("ü§∑ –ó–∞ –ø–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å —â–µ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∑–≤—ñ—Ç—É.");
      return;
    }

    console.log(
      `[Command /report] –ù–∞–π–¥–µ–Ω–æ ${measurements.length} –∏–∑–º–µ—Ä–µ–Ω–∏–π –¥–ª—è user ${userId} –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.`,
    );

    // 4. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PDF
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∏–º—è —Ñ–∞–π–ª–∞
    const monthName = format(now, "LLLL", { locale: uk }); // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –ø–æ-—Ä—É—Å—Å–∫–∏
    const year = format(now, "yyyy");
    const reportTitle = `–ó–≤—ñ—Ç –≤–∏–º—ñ—Ä—é–≤–∞–Ω—å –∑–∞ ${monthName} ${year}`;
    const filename = `report_${format(now, "yyyy-MM")}.pdf`;

    await ctx.replyWithChatAction("upload_document"); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –µ—â–µ —Ä–∞–∑

    const pdfBuffer = await pdfService.generateMeasurementsPDF(
      user,
      measurements,
      reportTitle,
    );

    // 5. –û—Ç–ø—Ä–∞–≤–∏—Ç—å PDF
    await ctx.replyWithDocument(new InputFile(pdfBuffer, filename), {
      caption: reportTitle, // –ü–æ–¥–ø–∏—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É
    });
    console.log(`[Command /report] –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω user ${userId}`);
  } catch (error) {
    console.error(
      `[Command /report] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/–æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –¥–ª—è ${userId}:`,
      error,
    );
    await ctx.reply(
      "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    );
  }
};
